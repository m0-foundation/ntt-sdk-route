#   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-  .-.-.   .-.-.   .-.-
#  / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ / / \ \ / / \ \ / / \
# `-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-'   `-`-'   `-`-'
#
#         Reusable workflow that builds the code and publishes the packages
#
#   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-  .-.-.   .-.-.   .-.-
#  / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ / / \ \ / / \ \ / / \
# `-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-'   `-`-'   `-`-'
name: Publish packages

on:
  push:
    branches:
      - main

# We'll default the NPM_TOKEN to an empty value since we use it
# in .npmrc file and if undefined, the node setup would fail
env:
  NPM_TOKEN: ""

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install node
        uses: actions/setup-node@v4
        with:
            node-version-file: '.nvmrc'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
            run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
            path: node_modules/.cache/turbo
            key: ${{ runner.os }}-${{ runner.arch }}-turbo-${{ github.ref_name }}-${{ github.sha }}
            # The hierarchy of restoring the cache goes as follows:
            #
            # - First we try to match an existing cache from the same branch
            # - Then we try to match a cache from the target branch of this PR (if this is not a PR, this cache will never exist)
            # - Then we try to match a cache from the default branch
            # - Then we try to match any cache
            restore-keys: |
                ${{ runner.os }}-${{ runner.arch }}-turbo-${{ github.ref_name }}-
                ${{ runner.os }}-${{ runner.arch }}-turbo-${{ github.base_ref }}-
                ${{ runner.os }}-${{ runner.arch }}-turbo-${{ github.event.repository.default_branch }}-
                ${{ runner.os }}-${{ runner.arch }}-turbo-

      # We'll run the build in series to avoid race conditions
      # when compiling hardhat projects in monorepo setups
      - name: Build
        run: pnpm build
        env:
          NODE_ENV: production

      # This step uses the changesets CLI to bump the package versions and/or publish the unpublished packages
      #
      # How this works is:
      #
      # - If there are any changesets (markdown files in the .changeset directory),
      #   changesets CLI will bump the package versions according to the bumps specified in the markdown files.
      #
      # - A PR is created containing these version bumps and with the changeset markdowns deleted
      #
      # - Once this PR is merged, this workflow kicks in again and this time checks
      #   whether there is anything that needs to be published
      - name: Publish packages / create version bump PRs
        uses: changesets/action@v1
        with:
          version: pnpm release:version
          publish: pnpm release:publish
          title: "ðŸš€ Version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.CHANGESETS_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.CHANGESETS_NPM_TOKEN }}